from flask import Flask, redirect, url_for, render_template, request, session, flash
from datetime import timedelta
from flask_sqlalchemy import SQLAlchemy

app = Flask(__name__)
app.secret_key = "567952383982302802411348515782243873730012065642084106736080450173748354814222598528117003094161641"
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///users.sqlite3'
app.config["SQLALCHEMY_TRACK_MODIFICATIONS"] = True
app.permanent_session_lifetime = timedelta(minutes=5)

db = SQLAlchemy(app)

class users(db.Model):
    _id = db.Column("id", db.Integer, primary_key=True)
    name = db.Column(db.String(100))
    email = db.Column(db.String(100))
    #password = db.Column(db.String(100))

    def __init__(self, name, email, password):
        self.name = name
        self.email = email
        #self.password = password




@app.route("/")
def home():
    return render_template("base.html")

@app.route("/view")
def view():
    return render_template("view.html", values=users.query.all())



@app.route("/login", methods=["POST", "GET"])
def login():
    if request.method == "POST":
        session.permanent = True
        user = request.form["nm"]
        session["user"] = user
        found_user = users.query.filter_by(name=user).first()

        if found_user:
            session["email"] = found_user.email
            #session["password"] = found_user.password
        else:
            usr = users(user, "", "")
            db.session.add(usr)
            db.session.commit()




        flash("Login Succesful!")
        return redirect(url_for("user"))
    else:
        if "user" in session:
            flash("Already Logged In!")
            return redirect(url_for("user"))
        return render_template("login.html")



@app.route("/user", methods=["POST", "GET"])
def user():
    email = None
    if "user" in session:
        user = session["user"]

        if request.method == "POST":
            email = request.form["email"]
            session["email"] = email
            found_user = users.query.filter_by(name=user).first()
            found_user.email = email
            db.session.commit()
            flash("Email was saved!")
            #return redirect(url_for("password"))
        else:
            if "email" in session:
                email = session["email"]

        return render_template("user.html", email=email)
    else:
        flash("You are not logged in!")
        return redirect(url_for("login"))



'''
@app.route("/password", methods=["POST", "GET"])
def password():
    password = None
    if "email" in session:
        email = session["email"]

        if request.method == "POST":
            password = request.form["password"]
            session["password"] = password
            found_user = users.query.filter_by(name=user).first()
            found_user.password = password
            db.session.commit()
            flash("Password was saved!")
        else:
            if "password" in session:
                password = session["password"]

        return render_template("password.html", password=password)
    else:
        flash("You are not logged in!")
        return redirect(url_for("login"))
'''

@app.route("/logout")
def logout():
    if "user" in session:
        user = session["user"]
        flash(f"You have been logged out, {user}", "info")
    session.pop("user", None)
    session.pop("email", None)
    session.pop("password", None)
    return redirect(url_for("login"))

if __name__ == "__main__":
    db.create_all()
    app.run(debug=True)
